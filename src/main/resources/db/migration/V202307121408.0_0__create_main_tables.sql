CREATE TABLE ORDERS_PRICE (
    ID INT NOT NULL,
    ACCRUAL_POINTS NUMBER(10,2), //acumulo de pontos
    AMOUNT NUMBER(10,2), // valor livelo
    POINTS_AMOUNT NUMBER(10,2), // valor em pontos
    PARTNER_AMOUNT NUMBER(10,2), // valor parceiro
    PRICE_LIST_ID VARCHAR2(255)  NOT NULL, // id da lista de preço livelo (clube / não clube)
    PRICE_LIST_DESCRIPTION VARCHAR2(255) NULL, // descrição da lista de preços livelo
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE ORDERS_PRICE_SEQ START WITH 1;
ALTER TABLE ORDERS_PRICE ADD CONSTRAINT PK_ORDERS_PRICE_ID PRIMARY KEY (ID) ENABLE;

CREATE TABLE ORDERS (
    ID VARCHAR2(255) NOT NULL,
    COMMERCE_ORDER_ID VARCHAR2(255) NOT NULL, // id gerado pelo carrinho livelo
    PARTNER_ORDER_ID VARCHAR2(500) NULL, // id da reserva no parceiro
    PARTNER_CODE VARCHAR2(255), // código do parceiro (cvc)
    SUBMITTED_DATE TIMESTAMP WITH TIME ZONE, // data da finalização do pedido
    CHANNEL VARCHAR2(100) NULL, // canal de compra do participante (desktop/app)
    TIER_CODE VARCHAR2(255) NULL, // categoria do participante (clube(nível)/não clube) **confirmar
    ORIGIN_ORDER VARCHAR2(255) NULL, // se veio de algum canal externo (zoom, buscapé) **confirmar
    CUSTOMER_IDENTIFIER VARCHAR2(255) NULL, // id do participante
    TRANSACTION_ID VARCHAR2(255) NULL, // id correlacinal
    EXPIRATION_DATE TIMESTAMP WITH TIME ZONE, // data de expiração do booking/reserva
    STATUS INT,
    ORDER_PRICE_ID INT NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE ORDERS_SEQ START WITH 1;
CREATE INDEX ORDERS_PRICE_ID_INDEX on ORDERS(ORDER_PRICE_ID) online;
CREATE INDEX ORDERS_CUSTOMER_INDEX on ORDERS(CUSTOMER_IDENTIFIER) online;
CREATE INDEX ORDERS_COMMERCE_ORDER_ID_INDEX on ORDERS(COMMERCE_ORDER_ID) online;
CREATE INDEX ORDERS_PARTNER_ORDER_ID_INDEX on ORDERS(PARTNER_ORDER_ID) online;
CREATE INDEX ORDERS_PARTNER_CODE_INDEX on ORDERS(PARTNER_CODE) online;
ALTER TABLE ORDERS ADD CONSTRAINT PK_ORDERS_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE ORDERS ADD CONSTRAINT fk_ORDERS_order_price_id FOREIGN KEY (ORDER_PRICE_ID) REFERENCES ORDERS_PRICE (ID);

CREATE TABLE ORDERS_STATUS(
    ID INT NOT NULL,
    CODE VARCHAR2(50) NOT NULL, // código status livelo
    DESCRIPTION VARCHAR2(255) NOT NULL, // descrição status livelo
    PARTNER_CODE VARCHAR2(255), // código status parceiro
    PARTNER_DESCRIPTION VARCHAR2(255), // descrição status parceiro
    PARTNER_RESPONSE CLOB, // body de retorno do parceiro
    STATUS_DATE TIMESTAMP WITH TIME ZONE, // data de atualização do status
    ORDER_ID VARCHAR2(255) NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE ORDERS_STATUS_SEQ START WITH 1;
CREATE INDEX ORDERS_STATUS_ORDER_ID_INDEX on ORDERS_STATUS(ORDER_ID) online;
CREATE INDEX ORDERS_STATUS_CODE_INDEX on ORDERS_STATUS(CODE) online;
ALTER TABLE ORDERS_STATUS ADD CONSTRAINT PK_ORDERS_STATUS_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE ORDERS_STATUS ADD CONSTRAINT fk_orders_status_order_id FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID);
ALTER TABLE ORDERS ADD CONSTRAINT fk_orders_status_id FOREIGN KEY (STATUS) REFERENCES ORDERS_STATUS (ID);
CREATE INDEX ORDERS_STATUS_INDEX on ORDERS(STATUS) online;

CREATE TABLE ORDERS_PRICE_DESCRIPTION (
    ID INT NOT NULL,
    AMOUNT NUMBER(10,2), // valor livelo
    POINTS_AMOUNT NUMBER(10,2), // valor pontos livelo
    TYPE VARCHAR2(255) NOT NULL, // tipo da descrição do preço (ADULT, CHILD, TAX)
    DESCRIPTION VARCHAR2(255) NULL, // descrição do tipo da taxa a ser exibido no front
    ORDER_PRICE_ID INT,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE ORDERS_PRICE_DESCRIPTION_SEQ START WITH 1;
CREATE INDEX ORDERS_PRICE_DESCRIPTION_ORDER_PRICE_ID_INDEX on ORDERS_PRICE_DESCRIPTION(ORDER_PRICE_ID) online;
ALTER TABLE ORDERS_PRICE_DESCRIPTION ADD CONSTRAINT PK_ORDERS_PRICE_DESCRIPTION_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE ORDERS_PRICE_DESCRIPTION ADD CONSTRAINT fk_orders_price_desc_order_price_id FOREIGN KEY (ORDER_PRICE_ID) REFERENCES ORDERS_PRICE (ID);

CREATE TABLE TRAVEL_INFO (
    ID INT NOT NULL,
    TYPE VARCHAR2(255) NOT NULL, // tipo do trecho (ida, ida/volta, multitrecho)
    RESERVATION_CODE VARCHAR2(255), // codigo da reserva na companhia aérea
    ADULT_QUANTITY INT, // quantidade adultos
    CHILD_QUANTITY INT, // quantidade crianças
    BABY_QUANTITY INT, // quantidade bebes
    VOUCHER VARCHAR2(255), // ticket da passagem
    TYPE_CLASS VARCHAR2(255), // classe escolhida pelo cliente (econômica/executiva)
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE TRAVEL_INFO_SEQ START WITH 1;
ALTER TABLE TRAVEL_INFO ADD CONSTRAINT PK_TRAVEL_INFO_ID PRIMARY KEY (ID) ENABLE;

CREATE TABLE ORDERS_ITEM_PRICE (
    ID INT NOT NULL,
    LIST_PRICE VARCHAR2(255) NOT NULL, // preço DE - POR
    AMOUNT NUMBER(15,4), // valor item livelo
    POINTS_AMOUNT NUMBER(10,2), // valor item pontos livelo
    ACCRUAL_POINTS NUMBER(10,2), // valor acumulo item
    PARTNER_AMOUNT NUMBER(10,2), // valor item parceiro
    PRICE_LIST_ID VARCHAR2(255), // lista de preços (clube/não clube)
    PRICE_RULE CLOB NULL, //  regra de preço do parceiro completa armazenada na calculadora
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE ORDERS_ITEM_PRICE_SEQ START WITH 1;
ALTER TABLE ORDERS_ITEM_PRICE ADD CONSTRAINT PK_ORDERS_ITEM_PRICE_ID PRIMARY KEY (ID) ENABLE;

CREATE TABLE ORDERS_ITEM (
    ID INT NOT NULL,
    COMMERCE_ITEM_ID VARCHAR2(255) NOT NULL, // id gerado pelo carrinho para o item
    SKU_ID VARCHAR2(255) NOT NULL, // sku do produto (cvc_flight/cvc_flight_tax)
    PRODUCT_ID VARCHAR2(255) NULL, // tipo do produto (flight)
    QUANTITY INT, //quantidade de itens
    EXTERNAL_COUPON VARCHAR2(255), // cupom promocional
    ORDER_ID VARCHAR2(255) NULL,
    TRAVEL_INFO_ID INT NULL,
    ORDER_ITEM_PRICE_ID INT NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE ORDERS_ITEM_SEQ START WITH 1;
CREATE INDEX ORDERS_ITEM_ORDER_ID_INDEX on ORDERS_ITEM(ORDER_ID) online;
CREATE INDEX ORDERS_ITEM_TRAVEL_INFO_ID_INDEX on ORDERS_ITEM(TRAVEL_INFO_ID) online;
CREATE INDEX ORDERS_ITEM_COMMERCE_ITEM_ID_INDEX on ORDERS_ITEM(COMMERCE_ITEM_ID) online;
CREATE INDEX ORDERS_ITEM_ORDER_ITEM_PRICE_ID_INDEX on ORDERS_ITEM(ORDER_ITEM_PRICE_ID) online;
ALTER TABLE ORDERS_ITEM ADD CONSTRAINT PK_ORDERS_ITEM_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE ORDERS_ITEM ADD CONSTRAINT fk_orders_item_order_id FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID);
ALTER TABLE ORDERS_ITEM ADD CONSTRAINT fk_orders_item_travel_info_id FOREIGN KEY (TRAVEL_INFO_ID) REFERENCES TRAVEL_INFO (ID);
ALTER TABLE ORDERS_ITEM ADD CONSTRAINT fk_orders_item_order_item_price_id FOREIGN KEY (ORDER_ITEM_PRICE_ID) REFERENCES ORDERS_ITEM_PRICE (ID);

CREATE TABLE PAX (
    ID INT NOT NULL,
    TYPE VARCHAR2(255) NOT NULL, // tipo passageiro (ADULT,CHILD,BABY)
    FIRST_NAME VARCHAR2(255) NOT NULL,
    LAST_NAME VARCHAR2(255) NOT NULL,
    EMAIL VARCHAR2(255) NULL,
    AREA_CODE VARCHAR2(2) NULL, // codigo de area do telefone
    PHONE_NUMBER VARCHAR2(9) NULL, // numero do telefone
    GENDER VARCHAR2(1) NULL, // genero passageiro
    BIRTH_DATE VARCHAR2(255),
    TRAVEL_INFO_ID INT NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE PAX_SEQ START WITH 1;
CREATE INDEX PAX_TRAVEL_INFO_ID_INDEX on PAX(TRAVEL_INFO_ID) online;
ALTER TABLE PAX ADD CONSTRAINT PK_PAX_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE PAX ADD CONSTRAINT fk_pax_travel_info_id FOREIGN KEY (TRAVEL_INFO_ID) REFERENCES TRAVEL_INFO (ID);

CREATE TABLE DOCUMENT (
	ID INT NOT NULL,
	DOCUMENT_NUMBER VARCHAR2(255) NOT NULL, // numero documento
	TYPE VARCHAR2(10) NOT NULL, // tipo documento (cpf/passaporte)
	ISSUE_DATE VARCHAR2(10) NOT NULL, // data de emissão
	ISSUING_COUNTRY VARCHAR2(100) NOT NULL, // pais de emissão
    EXPIRATION_DATE VARCHAR2(10) NOT NULL, // data expiração
	RESIDENCE_COUNTRY VARCHAR2(100) NOT NULL, // pais de residência
	PAX_ID INT NULL,
	CREATE_DATE TIMESTAMP WITH TIME ZONE,
	LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE DOCUMENT_SEQ START WITH 1;
CREATE INDEX DOCUMENT_PAX_ID_INDEX on DOCUMENT(PAX_ID) online;
ALTER TABLE DOCUMENT ADD CONSTRAINT PK_DOCUMENT_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE DOCUMENT ADD CONSTRAINT fk_document_pax_id FOREIGN KEY (PAX_ID) REFERENCES PAX (ID);

//SEGMENT REFERE-SE AO TRECHO (PODE HAVER MAIS DE UM VÔO NO TRECHO)
CREATE TABLE SEGMENT (
    ID INT NOT NULL,
    PARTNER_ID VARCHAR2(255), // IDENTIFICADOR DO VÔO NO PARCEIRO (TOKEN)
    STEP VARCHAR2 INT, // NÚMERO DO TRECHO DA VIAGEM
    STOPS INT, // NÚMERO DE PARADAS
    FLIGHT_DURATION INT, // DURAÇÃO DO VÔO EM MINUTOS
    ORIGIN_IATA VARCHAR2(3) NOT NULL, // IATA ORIGEM
    ORIGIN_DESCRIPTION VARCHAR2(255) NULL, // IATA DESCRIÇÃO / ORIGEM
    DESTINATION_IATA VARCHAR2(3) NOT NULL, // IATA DESTINO
    DESTINATION_DESCRIPTION VARCHAR2(255) NULL, // IATA DESCRIÇÃO DESTINO
    DEPARTURE_DATE TIMESTAMP WITH TIME ZONE, // DATA E HORA DA PARTIDA DO TRECHO
    ARRIVAL_DATE TIMESTAMP WITH TIME ZONE, // DATA E HORA DE CHEGADA DO TRECHO
    ORDER_ITEM_ID INT NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE SEGMENT_SEQ START WITH 1;
CREATE INDEX SEGMENT_ORDERS_ITEM_ID_INDEX on SEGMENT(ORDER_ITEM_ID) online;
ALTER TABLE SEGMENT ADD CONSTRAINT PK_SEGMENT_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE SEGMENT ADD CONSTRAINT fk_segment_orders_item_id FOREIGN KEY (ORDER_ITEM_ID) REFERENCES ORDERS_ITEM (ID);

// DESCRIÇÃO DE UM VÔO DO SEGMENT
CREATE TABLE FLIGHT_LEG (
    ID INT NOT NULL,
    FLIGHT_NUMBER VARCHAR2(255) NULL, // NUMERO DO VÔO
    FLIGHT_DURATION INT NULL, // DURAÇÃO DO VÔO EM MINUTOS
    AIRLINE VARCHAR2(255) NULL, // COMPANHIA AEREA RESPONSÁVEL PELA OPERAÇÃO
    MANAGED_BY VARCHAR2(255) NULL, // COMPANHIA AÉREA RESPONSÁVEL PELA VENDA
    TIME_TO_WAIT INT, // TEMPO DE ESPERA NA PARADA/CONEXÃO
    ORIGIN_IATA VARCHAR2(3) NULL, // IADA DE ORIGEM
    ORIGIN_DESCRIPTION VARCHAR2(255) NULL, // DESCRIÇÃO IATA ORIGEM
    DESTINATION_IATA VARCHAR2(3) NULL, // IATA DESTINO
    DESTINATION_DESCRIPTION VARCHAR2(255) NULL, // DESCRIÇÃO IATA DESTINO
    DEPARTURE_DATE TIMESTAMP WITH TIME ZONE, // DATA E HORA DE PARTIDA DA DECOLAGEM
    ARRIVAL_DATE TIMESTAMP WITH TIME ZONE, // DATA E HORA DO POUSO
    TYPE VARCHAR2(50) NULL, // TIPO DE LEG (INITIAL/STOP,FINAL)
    SEGMENT_ID INT NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE FLIGHT_LEG_SEQ START WITH 1;
CREATE INDEX FLIGHT_LEG_SEGMENT_ID_INDEX on FLIGHT_LEG(SEGMENT_ID) online;
ALTER TABLE FLIGHT_LEG ADD CONSTRAINT PK_FLIGHT_LEG_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE FLIGHT_LEG ADD CONSTRAINT fk_flight_leg_segment_id FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT (ID);

CREATE TABLE LUGGAGE (
    ID INT NOT NULL,
    DESCRIPTION VARCHAR2(255) NULL, // DESCRIÇÃO DA BAGAGEM
    TYPE VARCHAR2(50) NOT NULL, // TIPO (HAND,BAGGAGE)
    SEGMENT_ID INT NULL,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE LUGGAGE_SEQ START WITH 1;
CREATE INDEX LUGGAGE_SEGMENT_ID_INDEX on LUGGAGE(SEGMENT_ID) online;
ALTER TABLE LUGGAGE ADD CONSTRAINT PK_LUGGAGE_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE LUGGAGE ADD CONSTRAINT fk_luggage_segment_id FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT (ID);

CREATE TABLE CANCELATION_RULE (
    ID INT NOT NULL,
    DESCRIPTION VARCHAR2(255) NULL, // DESCRIÇÃO DA REGRA DE CANCELAMENTO NO PARCEIRO
    TYPE VARCHAR2(50) NOT NULL, // TIPO DE REGRA DE CANCELAMENTO NO PARCEIRO **PENDENTE DE NORMALIZAÇÃO LIVELO
    SEGMENT_ID INT,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE CANCELATION_RULE_SEQ START WITH 1;
CREATE INDEX CANCELATION_RULE_SEGMENT_ID_INDEX on CANCELATION_RULE(SEGMENT_ID) online;
ALTER TABLE CANCELATION_RULE ADD CONSTRAINT PK_CANCELATION_RULE_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE CANCELATION_RULE ADD CONSTRAINT fk_cancelation_rule_segment_id FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT (ID);

CREATE TABLE CHANGE_RULE (
    ID INT NOT NULL,
    DESCRIPTION VARCHAR2(255) NULL, // DESCRIÇÃO DA REGRA DE ALTERAÇÃO NO PARCEIRO
    TYPE VARCHAR2(50) NOT NULL, // TIPO DA REGRA DE ALTERAÇÃO **PENDENTE DE NORMALIZAÇÃO LIVELO
    SEGMENT_ID INT,
    CREATE_DATE TIMESTAMP WITH TIME ZONE,
    LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE
);
CREATE SEQUENCE CHANGE_RULE_SEQ START WITH 1;
CREATE INDEX CHANGE_RULE_SEGMENT_ID_INDEX on CHANGE_RULE(SEGMENT_ID) online;
ALTER TABLE CHANGE_RULE ADD CONSTRAINT PK_CHANGE_RULE_ID PRIMARY KEY (ID) ENABLE;
ALTER TABLE CHANGE_RULE ADD CONSTRAINT fk_change_rule_segment_id FOREIGN KEY (SEGMENT_ID) REFERENCES SEGMENT (ID);